Program([
	FuncDecl(main, IntegerType, [], None, BlockStmt([VarDecl(n, IntegerType), AssignStmt(Id(n), FuncCall(readInteger, [])), IfStmt(BinExpr(==, Id(n), IntegerLit(0)), ReturnStmt(IntegerLit(1)), ReturnStmt(BinExpr(*, Id(n), FuncCall(fact, [BinExpr(-, Id(n), IntegerLit(1))]))))]))
	FuncDecl(inc, VoidType, [Param(n, IntegerType), Param(delta, IntegerType)], None, BlockStmt([AssignStmt(Id(n), BinExpr(+, Id(n), Id(delta))), VarDecl(check, BooleanType, BooleanLit(False)), IfStmt(BinExpr(&&, BinExpr(>, Id(n), IntegerLit(3)), BinExpr(<, Id(delta), IntegerLit(3))), AssignStmt(Id(check), BooleanLit(True)), AssignStmt(Id(check), BooleanLit(False))), WhileStmt(BinExpr(&&, BinExpr(>, Id(n), IntegerLit(3)), BinExpr(<, Id(delta), IntegerLit(3))), BlockStmt([CallStmt(printInteger, Id(n)), AssignStmt(Id(n), BinExpr(-, BinExpr(+, IntegerLit(8), IntegerLit(9)), BinExpr(%, IntegerLit(3), IntegerLit(8)))), AssignStmt(Id(delta), BinExpr(+, Id(delta), IntegerLit(4)))]))]))
])